"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var keyless_exports = {};
__export(keyless_exports, {
  getKeylessCookieName: () => getKeylessCookieName,
  getKeylessCookieValue: () => getKeylessCookieValue
});
module.exports = __toCommonJS(keyless_exports);
var import_enc_hex = __toESM(require("crypto-js/enc-hex"));
var import_sha256 = __toESM(require("crypto-js/sha256"));
var import_feature_flags = require("../utils/feature-flags");
const keylessCookiePrefix = `__clerk_keys_`;
const getKeylessCookieName = () => {
  const PATH = process.env.PWD;
  if (!PATH) {
    return `${keylessCookiePrefix}${0}`;
  }
  const lastThreeDirs = PATH.split("/").filter(Boolean).slice(-3).reverse().join("/");
  const hash = hashString(lastThreeDirs);
  return `${keylessCookiePrefix}${hash}`;
};
function hashString(str) {
  return (0, import_sha256.default)(str).toString(import_enc_hex.default).slice(0, 16);
}
function getKeylessCookieValue(getter) {
  if (!import_feature_flags.canUseKeyless) {
    return void 0;
  }
  const keylessCookieName = getKeylessCookieName();
  let keyless;
  try {
    if (keylessCookieName) {
      keyless = JSON.parse(getter(keylessCookieName) || "{}");
    }
  } catch {
    keyless = void 0;
  }
  return keyless;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getKeylessCookieName,
  getKeylessCookieValue
});
//# sourceMappingURL=keyless.js.map